# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .azure_configuration_service_client import AzConfigServiceClient
from msrest import Serializer, Deserializer
from msrestazure import AzureConfiguration
from .version import VERSION
from .operations.key_values_operations import KeyValuesOperations
from .operations.keys_operations import KeysOperations
from .operations.labels_operations import LabelsOperations
from .operations.locks_operations import LocksOperations
from .operations.revisions_operations import RevisionsOperations
from . import models
from .utils import get_endpoint_from_connection_string


class AzureConfigurationClientConfiguration(AzureConfiguration):
    """Configuration for AzureConfigurationClient
    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param connection_string: Contains 'endpoint', 'id' and 'secret', where id and secret are credentials
    :type connection_string: str
    """

    def __init__(
            self, connection_string):

        if connection_string is None:
            raise ValueError("Parameter 'connection_string' must not be None.")
        base_url = "https://" + get_endpoint_from_connection_string(connection_string)

        super(AzureConfigurationClientConfiguration, self).__init__(base_url)

        self.add_user_agent('azure-configurationservice/{}'.format(VERSION))
        self.add_user_agent('Azure-SDK-For-Python')

        self.connection_string = connection_string


class AzureConfigurationClient(object):
    """Do stuff with azconfig

    :ivar config: Configuration for client.
    :vartype config: AzureConfigurationClientConfiguration

    :ivar key_values: KeyValues operations
    :vartype key_values: azure.configurationservice.operations.KeyValuesOperations
    :ivar keys: Keys operations
    :vartype keys: azure.configurationservice.operations.KeysOperations
    :ivar labels: Labels operations
    :vartype labels: azure.configurationservice.operations.LabelsOperations
    :ivar locks: Locks operations
    :vartype locks: azure.configurationservice.operations.LocksOperations
    :ivar revisions: Revisions operations
    :vartype revisions: azure.configurationservice.operations.RevisionsOperations

    :param connection_string: Credentials needed for the client to connect to Azure.
    :type connection_string: str
    """

    def __init__(
            self, connection_string):

        self.config = AzureConfigurationClientConfiguration(connection_string)
        self._client = AzConfigServiceClient(self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = '0.1'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.key_values = KeyValuesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.keys = KeysOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.labels = LabelsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.locks = LocksOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.revisions = RevisionsOperations(
            self._client, self.config, self._serialize, self._deserialize)
